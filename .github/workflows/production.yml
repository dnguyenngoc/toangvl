name: Production
on:
  push:
    branches:
    - master
  pull_request:
    branches:
    - master

env:
  
  # Variable name
  PROJECT_NAME: ${{ secrets.PROJECT_NAME }}
  BACKEND_IMAGE: ${{ secrets.BACKEND_IMAGE }}
  FRONTEND_IMAGE: ${{ secrets.FRONTEND_IMAGE }}

  # dockerhub container
  DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}

  # Production config and env
  PRODUCTION_PRIVATE_KEY: ${{ secrets.PRODUCTION_PRIVATE_KEY }}
  PRODUCTION_HOST_SSH_USERNAME: ${{ secrets.PRODUCTION_HOST_SSH_USERNAME }} 
  PRODUCTION_HOST_IP_ADDRESS: ${{ secrets.PRODUCTION_HOST_IP_ADDRESS }}

jobs:

  # # [BUILDING] Building backend and frontend and pushing image to AWS ECR
  # build:
  #   name: Building backend and pushing image to AWS ECR
  #   runs-on: ubuntu-latest
  #   steps:

  #   # [Step-1] check config git
  #   - uses: actions/checkout@v2

  #   # [Step-2] login dockerhub container
  #   - name: Login to DockerHub Registry
  #     run: |
  #       echo $DOCKERHUB_PASSWORD | docker login -u $DOCKERHUB_USERNAME --password-stdin
    
  #   # [Step-3] buid and tag image from Dockerfile
  #   - name: Build and tag the image
  #     run: |
  #       docker build -t $BACKEND_IMAGE -t $DOCKERHUB_USERNAME/$PROJECT_NAME:$BACKEND_IMAGE ./Backend
  #       docker build -t $FRONTEND_IMAGE -t $DOCKERHUB_USERNAME/$PROJECT_NAME:$FRONTEND_IMAGE ./Frontend
    
  #   # [Step-4] Push image to docker hub
  #   - name: Push image to DockerHub
  #     run: |
  #       docker push $DOCKERHUB_USERNAME/$PROJECT_NAME:$BACKEND_IMAGE
  #       docker push $DOCKERHUB_USERNAME/$PROJECT_NAME:$FRONTEND_IMAGE
     
  #  [DEPLOYING] Pull image from AWS ECR and push to server with ssh
  deploy:
    # needs: build  # condition need task building susscess
    runs-on: ubuntu-latest
    steps:

    # [Step-1] check config git
    - uses: actions/checkout@v2
    
    # [Step-2] add ssh key to now vm
    - name: Add SSH key to vm deploy
      run: |
        mkdir -p ~/.ssh
        echo "$PRODUCTION_PRIVATE_KEY" | tr -d '\r' > ~/.ssh/id_rsa
        chmod 700 ~/.ssh/id_rsa
        eval "$(ssh-agent -s)"
        ssh-add ~/.ssh/id_rsa
        ssh-keyscan -H 'github.com' >> ~/.ssh/known_hosts  

    # [Step-3] ssh to server and pull image and dowload file needed
    - name: Connect to Server with SSH and pull DockerHub image
      run: |
        ssh -o StrictHostKeyChecking=no $PRODUCTION_HOST_SSH_USERNAME@$PRODUCTION_HOST_IP_ADDRESS
        ls

     # [Step-4] make deploy 
    
    