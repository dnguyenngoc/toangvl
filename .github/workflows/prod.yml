name: Production backend building job
on:
  push:
    branches:
    - master
  pull_request:
    branches:
    - master

env:
  AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
  AWS_ECR_ID: ${{ secrets.AWS_ECR_ID }}
  BACKEND_IMAGE: ${{ secrets.BACKEND_IMAGE }}
  FRONTEND_IMAGE: frontend
  DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  PROJECT_NAME: toangvl
  PROD_PRIVATE_KEY: ${{ secrets.PROD_PRIVATE_KEY }}
  STAGING_HOST_SSH_USERNAME: ubuntu 
  STAGING_HOST_IP_ADDRESS: ec2-52-221-247-51.ap-southeast-1.compute.amazonaws.com

jobs:
  # Building backend and frontend and pushing image to AWS ECR
  build:
    name: Building backend and pushing image to AWS ECR
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Login to DockerHub Registry
      run: |
        echo $DOCKERHUB_PASSWORD | docker login -u $DOCKERHUB_USERNAME --password-stdin

    - name: Build and tag the image
      run: |
        docker build -t $BACKEND_IMAGE -t $DOCKERHUB_USERNAME/$PROJECT_NAME:$BACKEND_IMAGE ./Backend
        docker build -t $FRONTEND_IMAGE -t $DOCKERHUB_USERNAME/$PROJECT_NAME:$FRONTEND_IMAGE ./Frontend

    - name: Push image to DockerHub
      run: |
        docker push $DOCKERHUB_USERNAME/$PROJECT_NAME:$BACKEND_IMAGE
        docker push $DOCKERHUB_USERNAME/$PROJECT_NAME:$FRONTEND_IMAGE
     
  # Building backend pull image from AWS ECR and push to server
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Add SSH key to vm deploy
      run: |
        mkdir -p ~/.ssh
        echo $PROD_PRIVATE_KEY | tr -d '\r' > ~/.ssh/id_rsa
        chmod 700 ~/.ssh/id_rsa
        eval "$(ssh-agent -s)"
        ssh-add ~/.ssh/id_rsa

    - name: Connect to Server with SSH and pull DockerHub image
      run: |
        ssh -o StrictHostKeyChecking=no $STAGING_HOST_SSH_USERNAME@$STAGING_HOST_IP_ADDRESS
        export $(cat .env | xargs)
        echo $DOCKERHUB_PASSWORD | docker login -u $DOCKERHUB_USERNAME --password-stdin
        docker pull $PROJECT_NAME:$BACKEND_IMAGE
    
    